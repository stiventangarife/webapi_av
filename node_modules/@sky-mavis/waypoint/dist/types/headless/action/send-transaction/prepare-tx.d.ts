import { type Address, Client, Hex } from "viem";
import { type ChainParams, SupportedTransactionType, type TransactionInServerFormat, type TransactionParams, TransactionType } from "./common";
export declare const DEFAULT_VALUE = "0x0";
export declare const DEFAULT_DATA = "0x";
export declare const GAS_LIMIT_BUFFER_MULTIPLIER = 2n;
export declare const EXPIRED_TIME_PLACEHOLDER = "0x5208";
export declare function validateTransactionType(type: TransactionType | undefined): SupportedTransactionType;
export declare function validateToAddress(to: Address | null): Address;
export declare function validateFromAddress(from: Address | undefined): Address;
export declare function estimateGasLimit(client: Client, params: {
    to: Address;
    from: Address;
    value: Hex;
    data: Hex;
    gas?: Hex;
}): Promise<Hex>;
export declare function getNonceFromNetwork(client: Client, params: {
    from: Address;
    nonce?: Hex;
}): Promise<Hex>;
export type FormatTransactionParams = {
    transaction: TransactionParams;
    chain: ChainParams;
    currentAddress?: Address;
};
export declare const toTransactionInServerFormat: (params: FormatTransactionParams) => Promise<TransactionInServerFormat>;
