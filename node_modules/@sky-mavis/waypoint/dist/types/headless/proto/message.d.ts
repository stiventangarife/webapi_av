import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message as Message$1 } from "@bufbuild/protobuf";
/**
 * Describes the file rpc/proto/v1/message.proto.
 */
export declare const file_rpc_proto_v1_message: GenFile;
/**
 * @generated from message rpc.proto.v1.Message
 */
export type Message = Message$1<"rpc.proto.v1.Message"> & {
    /**
     * @generated from field: rpc.proto.v1.MessageType type = 1;
     */
    type: MessageType;
    /**
     * @generated from field: bytes data = 2;
     */
    data: Uint8Array;
};
/**
 * Describes the message rpc.proto.v1.Message.
 * Use `create(MessageSchema)` to create a new message.
 */
export declare const MessageSchema: GenMessage<Message>;
/**
 * @generated from enum rpc.proto.v1.MessageType
 */
export declare enum MessageType {
    /**
     * @generated from enum value: PAYER_MESSAGE_UNSPECIFIED = 0;
     */
    PAYER_MESSAGE_UNSPECIFIED = 0,
    /**
     * @generated from enum value: PAYER_MESSAGE_GENERATE_NONCE = 1;
     */
    PAYER_MESSAGE_GENERATE_NONCE = 1,
    /**
     * @generated from enum value: PAYER_MESSAGE_ACCESS_TOKEN = 2;
     */
    PAYER_MESSAGE_ACCESS_TOKEN = 2,
    /**
     * @generated from enum value: PAYER_MESSAGE_PAYER_SIGNATURE = 10;
     */
    PAYER_MESSAGE_PAYER_SIGNATURE = 10,
    /**
     * @generated from enum value: SEND_MESSAGE_SIGN_HASH = 100;
     */
    SEND_MESSAGE_SIGN_HASH = 100
}
/**
 * Describes the enum rpc.proto.v1.MessageType.
 */
export declare const MessageTypeSchema: GenEnum<MessageType>;
