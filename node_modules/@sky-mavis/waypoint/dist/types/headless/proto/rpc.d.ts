import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
/**
 * Describes the file rpc/proto/v1/rpc.proto.
 */
export declare const file_rpc_proto_v1_rpc: GenFile;
/**
 * @generated from message rpc.proto.v1.Frame
 */
export type Frame = Message<"rpc.proto.v1.Frame"> & {
    /**
     * @generated from field: rpc.proto.v1.Type type = 1;
     */
    type: Type;
    /**
     * @generated from field: int32 id = 2;
     */
    id: number;
    /**
     * @generated from field: bytes data = 3;
     */
    data: Uint8Array;
};
/**
 * Describes the message rpc.proto.v1.Frame.
 * Use `create(FrameSchema)` to create a new message.
 */
export declare const FrameSchema: GenMessage<Frame>;
/**
 * @generated from message rpc.proto.v1.Error
 */
export type Error = Message<"rpc.proto.v1.Error"> & {
    /**
     * @generated from field: uint64 code = 1;
     */
    code: bigint;
    /**
     * @generated from field: string message = 2;
     */
    message: string;
};
/**
 * Describes the message rpc.proto.v1.Error.
 * Use `create(ErrorSchema)` to create a new message.
 */
export declare const ErrorSchema: GenMessage<Error>;
/**
 * @generated from message rpc.proto.v1.Ok
 */
export type Ok = Message<"rpc.proto.v1.Ok"> & {
    /**
     * @generated from field: string message = 2;
     */
    message: string;
};
/**
 * Describes the message rpc.proto.v1.Ok.
 * Use `create(OkSchema)` to create a new message.
 */
export declare const OkSchema: GenMessage<Ok>;
/**
 * Specific logic
 *
 * @generated from message rpc.proto.v1.Session
 */
export type Session = Message<"rpc.proto.v1.Session"> & {
    /**
     * @generated from field: string session_id = 1;
     */
    sessionId: string;
};
/**
 * Describes the message rpc.proto.v1.Session.
 * Use `create(SessionSchema)` to create a new message.
 */
export declare const SessionSchema: GenMessage<Session>;
/**
 * @generated from enum rpc.proto.v1.Type
 */
export declare enum Type {
    /**
     * @generated from enum value: TYPE_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from enum value: TYPE_DATA = 1;
     */
    DATA = 1,
    /**
     * @generated from enum value: TYPE_ERROR = 2;
     */
    ERROR = 2,
    /**
     * @generated from enum value: TYPE_DONE = 3;
     */
    DONE = 3
}
/**
 * Describes the enum rpc.proto.v1.Type.
 */
export declare const TypeSchema: GenEnum<Type>;
