'use strict';

var headless_error_server = require('../error/server.js');
var headless_action_helpers_request_request = require('./helpers/request/request.js');
var headless_action_sendTransaction_common = require('./send-transaction/common.js');
var headless_action_sendTransaction_prepareTx = require('./send-transaction/prepare-tx.js');
require('../proto/rpc.js');
require('../../file-D9-_A4DE.js');
require('../../enum-CbdizYms.js');
require('../error/client.js');
require('../utils/token.js');
require('../../index-Pma4qYcb.js');
require('./helpers/request/abort-controller.js');
require('./helpers/request/configurations.js');
require('./helpers/tx-type-check.js');
require('../../estimate-fee-per-gas-DpeR2wRz.js');
require('../../saigon-DYBomzZQ.js');
require('../../toBytes-Dmnw03lt.js');
require('../../base-BPC6VLRS.js');
require('../../size-BDN9jZuU.js');
require('../../formatGwei-Sx3AlOf5.js');
require('../../isAddress-Ajbo9xO8.js');
require('../../keccak256-DkMFbAQi.js');
require('../../utils-U8Z-__N5.js');
require('../../http-jAHgRxFF.js');
require('../../rpc-BJmuIVLE.js');
require('../../recoverAddress-C3o2uHFx.js');
require('../../publicKeyToAddress-7k7v6GXz.js');
require('../../concat-BguDurHH.js');
require('../../getTransactionType-HIODnQRW.js');
require('../../sha256-DGm_MAwc.js');
require('../../sha256-CLylCSfy.js');

const validateSponsorTransaction = async params => {
  const {
    httpUrl,
    waypointToken,
    transaction,
    chain,
    currentAddress
  } = params;
  const sponsoredTx = {
    ...transaction,
    type: headless_action_sendTransaction_common.SupportedTransaction.RoninGasSponsor
  };
  const serverTxData = await headless_action_sendTransaction_prepareTx.toTransactionInServerFormat({
    chain,
    transaction: sponsoredTx,
    currentAddress
  });
  const {
    data,
    error
  } = await headless_action_helpers_request_request.request(`post ${httpUrl}/v1/public/tx-sponsor/validate`, {
    headers: {
      authorization: waypointToken
    },
    body: {
      tx: serverTxData
    }
  });
  if (data) {
    return data.data;
  }
  throw new headless_error_server.ServerError({
    code: error.code,
    message: error.errorMessage
  });
};

exports.validateSponsorTransaction = validateSponsorTransaction;
