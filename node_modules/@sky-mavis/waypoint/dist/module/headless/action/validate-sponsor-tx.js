import { ServerError } from '../error/server.js';
import { request } from './helpers/request/request.js';
import { SupportedTransaction } from './send-transaction/common.js';
import { toTransactionInServerFormat } from './send-transaction/prepare-tx.js';
import '../proto/rpc.js';
import '../../file-8Ag42MRZ.js';
import '../../enum-DxRJVtGK.js';
import '../error/client.js';
import '../utils/token.js';
import '../../index-B3KPQWEG.js';
import './helpers/request/abort-controller.js';
import './helpers/request/configurations.js';
import './helpers/tx-type-check.js';
import '../../estimate-fee-per-gas-D3htm6BR.js';
import '../../saigon-BY87pDOW.js';
import '../../toBytes-CiKSrzpb.js';
import '../../base-CC-Hj7CW.js';
import '../../size-CssOTqqV.js';
import '../../formatGwei-BX_cgVog.js';
import '../../isAddress-D-kYvfsU.js';
import '../../keccak256-0IBB9HST.js';
import '../../utils-CKEBUnDS.js';
import '../../http-D9CsIJ_G.js';
import '../../rpc-BGk0htDU.js';
import '../../recoverAddress-BD83FT0I.js';
import '../../publicKeyToAddress-DhFB83IE.js';
import '../../concat-CZcWoY2n.js';
import '../../getTransactionType-XZ1KTlkM.js';
import '../../sha256-BHhS4Zh9.js';
import '../../sha256-E5MvF2nn.js';

const validateSponsorTransaction = async params => {
  const {
    httpUrl,
    waypointToken,
    transaction,
    chain,
    currentAddress
  } = params;
  const sponsoredTx = {
    ...transaction,
    type: SupportedTransaction.RoninGasSponsor
  };
  const serverTxData = await toTransactionInServerFormat({
    chain,
    transaction: sponsoredTx,
    currentAddress
  });
  const {
    data,
    error
  } = await request(`post ${httpUrl}/v1/public/tx-sponsor/validate`, {
    headers: {
      authorization: waypointToken
    },
    body: {
      tx: serverTxData
    }
  });
  if (data) {
    return data.data;
  }
  throw new ServerError({
    code: error.code,
    message: error.errorMessage
  });
};

export { validateSponsorTransaction };
